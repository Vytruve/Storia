name: Build Storia ERP for Windows

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-package:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install MAUI Workloads
        run: dotnet workload install maui

      - name: Restore NuGet packages
        run: dotnet restore Storia.sln

      # 5. Publicar o Aplicativo como um Pacote MSIX
      # Adicionamos a propriedade '-p:PackageMSIX=true' para ativar o perfil de publicação MSIX no .csproj
      - name: Publish MAUI App as MSIX Installer
        run: dotnet publish src/UI/Storia.UI.Maui/Storia.UI.Maui.csproj -c Release -f net8.0-windows10.0.19041.0 -p:PackageMSIX=true

      # 6. Carregar o Instalador MSIX como Artefato
      # Este passo permanece o mesmo, procurando pelo arquivo .msix gerado.
      - name: Upload MSIX Installer
        uses: actions/upload-artifact@v4
        with:
          name: storia-erp-installer
          path: '**/AppPackages/**/*.msix'
