# Nome do Workflow: Aparecer치 na aba "Actions" do seu reposit칩rio GitHub.
name: Build Storia ERP Installer for Windows

# Gatilhos: define quando o workflow ser치 acionado.
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    # Executar em VM Windows
    runs-on: windows-latest

    steps:
      # 1. Faz checkout do reposit칩rio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o SDK .NET conforme global.json
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      # 3. Instala workloads do MAUI
      - name: Install MAUI workloads
        run: dotnet workload install maui

      # 4. Restaura pacotes NuGet
      - name: Restore NuGet packages
        run: dotnet restore Storia.sln

      # 5. Publica o projeto como MSIX
      - name: Publish MAUI App for Windows
        run: |
          dotnet publish src/UI/Storia.UI.Maui/Storia.UI.Maui.csproj \
            -f net8.0-windows10.0.19041.0 \
            -c Release \
            -p:GenerateAppxPackageOnBuild=true \
            -o publish

      # 6. Upload do instalador .msix como artefato
      - name: Upload MSIX installer
        uses: actions/upload-artifact@v4
        with:
          name: storia-erp-installer
          path: publish/**/*.msix
