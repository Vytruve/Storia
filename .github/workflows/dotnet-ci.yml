name: Build e Release do Storia ERP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    # Definindo variáveis para reutilização e clareza
    env:
      TARGET_FRAMEWORK: net8.0-windows10.0.19041.0
      RUNTIME_IDENTIFIER: win10-x64

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Instalar carga de trabalho MAUI para Windows
      run: dotnet workload install maui-windows

    # CORREÇÃO APLICADA AQUI: Especificando o RuntimeIdentifier no restore
    - name: Restaurar pacotes NuGet
      run: dotnet restore Storia.sln -r ${{ env.RUNTIME_IDENTIFIER }}

    # CORREÇÃO APLICADA AQUI: Especificando o TargetFramework e o RuntimeIdentifier no build
    - name: Compilar a solução
      run: dotnet build src/UI/Storia.UI.Maui/Storia.UI.Maui.csproj -f ${{ env.TARGET_FRAMEWORK }} -r ${{ env.RUNTIME_IDENTIFIER }} --configuration Release --no-restore

    # Passo de empacotamento permanece o mesmo, mas o caminho é mais previsível agora
    - name: Empacotar artefatos
      uses: actions/upload-artifact@v4
      with:
        name: storia-erp-windows
        path: src/UI/Storia.UI.Maui/bin/Release/${{ env.TARGET_FRAMEWORK }}/${{ env.RUNTIME_IDENTIFIER }}/

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Baixar artefatos da build
      uses: actions/download-artifact@v4
      with:
        name: storia-erp-windows

    - name: Criar arquivo ZIP
      run: zip -r storia-erp-windows.zip .

    - name: Criar Release no GitHub
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "release-${{ github.run_number }}"
        name: "Storia ERP Release ${{ github.run_number }}"
        body: "Release automática gerada pelo GitHub Actions."
        files: storia-erp-windows.zip
